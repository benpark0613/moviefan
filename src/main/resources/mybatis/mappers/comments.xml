<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jhta.moviefan.dao.CommentDao">

	
	<!-- 여기부터 주성 -->
	
	<select id="searchCommentsByMovieNo" parameterType="int" resultType="com.jhta.moviefan.dto.CommentDto">
		select 
			m.comment_no			as commentNo,				
			m.customer_no			as customerNo,
			c.customer_id			as customerId,
			m.movie_no				as movieNo,
			m.customer_rating		as rating,
			m.comment_content		as content,
			m.comment_created_date	as creDate,
			m.comment_report_count	as reportCount,
			m.comment_like_count	as likeCount,
			m.comment_updated_date	as updatedDate
		from 
			movie_customer_comment m, customer c
		where
			movie_no = #{value}
		and
			m.customer_no = c.customer_no
		order by
			comment_no desc
	</select>
	
	<select id="getAllComments" resultType="com.jhta.moviefan.dto.CommentDto">
		select 
			CO.COMMENT_NO				as commentNo, 
			CO.CUSTOMER_NO				as customerNo, 
			CO.MOVIE_NO					as movieNo, 
			CO.CUSTOMER_RATING			as rating, 
			CO.COMMENT_CONTENT			as content, 
			CO.COMMENT_CREATED_DATE		as creDate, 
			CO.COMMENT_REPORT_COUNT		as reprtCount,
			CO.COMMENT_LIKE_COUNT		as likeCount,
			CO.COMMENT_UPDATED_DATE		as updatedDate,
			M.MOVIE_TITLE				as movieTitle, 
			CU.customer_id				as customerId 
		from 
			MOVIE_CUSTOMER_COMMENT CO, 
			MOVIE M, 
			CUSTOMER CU
		where 
			CO.MOVIE_NO = M.MOVIE_NO
   		and CO.CUSTOMER_NO = CU.CUSTOMER_NO
		order by
			COMMENT_CREATED_DATE desc
	</select>
	
	<select id="getCommentPages" parameterType="com.jhta.moviefan.form.CriteriaMovieComment" resultType="com.jhta.moviefan.dto.CommentDto">
		select 	
				CO.COMMENT_NO			as commentNo, 
				CO.CUSTOMER_NO			as customerNo, 
				CO.CUSTOMER_RATING		as rating, 
				CO.COMMENT_CONTENT		as content, 
				CO.COMMENT_CREATED_DATE	as creDate, 
				CO.COMMENT_REPORT_COUNT	as reportCount, 
				CO.COMMENT_LIKE_COUNT	as likeCount, 
				CO.COMMENT_UPDATED_DATE	as updatedDate,
				CU.CUSTOMER_ID 			as customerId
		from(
			 select C.*, row_number() over (order by COMMENT_LIKE_COUNT desc) rn
			 from MOVIE_CUSTOMER_COMMENT C
			 where C.MOVIE_NO = #{movieNo}
			 ) CO, CUSTOMER CU
		where
			CO.CUSTOMER_NO = CU.CUSTOMER_NO
		and rn between #{beginIndex} and #{endIndex}
	</select>
	
	<select id="getAllCommentByIndex" parameterType="com.jhta.moviefan.form.Criteria" resultType="com.jhta.moviefan.dto.CommentDto">
		select 	
				CO.MOVIE_NO				as movieNo, 
				M.MOVIE_TITLE			as movieTitle, 
				CO.COMMENT_NO			as commentNo, 
				CO.CUSTOMER_NO			as customerNo, 
				CO.CUSTOMER_RATING		as rating, 
				CO.COMMENT_CONTENT		as content, 
				CO.COMMENT_CREATED_DATE	as creDate, 
				CO.COMMENT_REPORT_COUNT	as reportCount, 
				CO.COMMENT_LIKE_COUNT	as likeCount, 
				CO.COMMENT_UPDATED_DATE	as updatedDate,
				CU.CUSTOMER_ID 			as customerId
		from(
			 select C.*, row_number() over (order by COMMENT_LIKE_COUNT desc) rn
			 from MOVIE_CUSTOMER_COMMENT C
			 ) CO, CUSTOMER CU, MOVIE M
		where
			CO.CUSTOMER_NO = CU.CUSTOMER_NO
		and	CO.MOVIE_NO = M.MOVIE_NO 
		AND	rn between #{beginIndex} and #{endIndex}
		order by CO.COMMENT_CREATED_DATE desc
	</select>
	
	<select id="searchComment" parameterType="com.jhta.moviefan.form.CriteriaMovieComment" resultType="com.jhta.moviefan.dto.CommentDto">
		select 	
				CO.MOVIE_NO				as movieNo, 
				M.MOVIE_TITLE			as movieTitle, 
				CO.COMMENT_NO			as commentNo, 
				CO.CUSTOMER_NO			as customerNo, 
				CO.CUSTOMER_RATING		as rating, 
				CO.COMMENT_CONTENT		as content, 
				CO.COMMENT_CREATED_DATE	as creDate, 
				CO.COMMENT_REPORT_COUNT	as reportCount, 
				CO.COMMENT_LIKE_COUNT	as likeCount, 
				CO.COMMENT_UPDATED_DATE	as updatedDate,
				CU.CUSTOMER_ID 			as customerId
		from(
			 select C.*, row_number() over (
			 order by C.COMMENT_CREATED_DATE desc
			 ) rn
			 from MOVIE_CUSTOMER_COMMENT C, MOVIE M, CUSTOMER CU
			 where C.MOVIE_NO = M.MOVIE_NO
			 and C.CUSTOMER_NO = CU.CUSTOMER_NO
		 	<if test="opt != null and value != null">
		 		<choose>
		 			<when test="opt == '영화명'">
		 				and M.MOVIE_TITLE LIKE '%' || #{value} || '%'
		 			</when>
		 			<when test="opt == '작성자아이디'">
		 				and CU.CUSTOMER_ID '%' || #{value} || '%'
		 			</when>
		 		</choose>
		 	</if>
			 ) CO, CUSTOMER CU, MOVIE M
		where
			CO.CUSTOMER_NO = CU.CUSTOMER_NO
		and	CO.MOVIE_NO = M.MOVIE_NO 
		AND	rn between #{beginIndex} and #{endIndex}
		order by 
		<choose>
	 		<when test="sort == 'recent'">
	 			Co.COMMENT_CREATED_DATE desc
	 		</when>
	 		<when test="sort == 'recommend'">
	 			Co.COMMENT_LIKE_COUNT desc
	 		</when>
	 		<otherwise>
	 			Co.COMMENT_CREATED_DATE desc
	 		</otherwise> 
	 	</choose>
	</select>
	
	<select id="getCommentTotalRow" parameterType="com.jhta.moviefan.form.CriteriaMovieComment" resultType="int">
		select count(*)
		from MOVIE_CUSTOMER_COMMENT CO, MOVIE M, CUSTOMER CU
		where M.movie_no = CO.movie_no
		and	CO.CUSTOMER_NO = CU.CUSTOMER_NO
		<if test="opt != null and value != null">
		 		<choose>
		 			<when test="opt == '영화명'">
		 				and M.MOVIE_TITLE LIKE '%' || #{value} || '%'
		 			</when>
		 			<when test="opt == '작성자아이디'">
		 				and CU.CUSTOMER_ID '%' || #{value} || '%'
		 			</when>
		 		</choose>
		 	</if>
	</select>
	
	<select id="getCommentTotalRowByMovieNo" parameterType="int" resultType="int">
		select count(*)
		from MOVIE_CUSTOMER_COMMENT
		where movie_no = #{value}
	</select>
	
	<select id="getAllLikedCommentByCustomerNo" parameterType="int" resultType="com.jhta.moviefan.vo.CommentLikedCustomer">
		select COMMENT_NO	as commentNo, 
			   CUSTOMER_NO	as customerNo
		from	COMMENT_LIKED_USER
		where	CUSTOMER_NO = #{value}
	</select>
	
	<select id="getCommentRatingByMovieNo" parameterType="int" resultType="int">
		select CUSTOMER_RATING
		from MOVIE_CUSTOMER_COMMENT
		where MOVIE_NO = #{value}
	</select>
	
	<update id="updateCommentLike" parameterType="int">
		update MOVIE_CUSTOMER_COMMENT
		set
			COMMENT_LIKE_COUNT = COMMENT_LIKE_COUNT + #{count}
		where
			COMMENT_NO = #{commentNo}
	</update>
	
	<update id="updateMovieCustomerRating" parameterType="int">
		update MOVIE
		set 
			MOVIE_CUSTOMER_RATING = #{rating}
		where
			MOVIE_NO = #{movieNo}
		
	</update>
	
	<insert id="updateCommentLikeCustomer" parameterType="com.jhta.moviefan.vo.CommentLikedCustomer">
		insert into COMMENT_LIKED_USER
			(COMMENT_NO, CUSTOMER_NO)
		values
			(#{commentNo}, #{customerNo})
	</insert>
	
	<insert id="insertComment" parameterType="com.jhta.moviefan.form.CommentInsertForm">
		insert into MOVIE_CUSTOMER_COMMENT
		(COMMENT_NO, CUSTOMER_NO, MOVIE_NO, CUSTOMER_RATING, COMMENT_CONTENT, COMMENT_CREATED_DATE)
		values
		(movie_customer_comment_seq.nextval, #{customerNo}, #{movieNo}, #{rating}, #{content}, sysdate)
	</insert>
	
	<insert id="insertCommentLikedCustomer" parameterType="com.jhta.moviefan.vo.CommentLikedCustomer">
		insert into COMMENT_LIKED_USER
		(COMMENT_NO, CUSTOMER_NO)
		values
		(#{commentNo}, #{customerNo})
	</insert>
	
	<delete id="deleteCommentLikedCustomer" parameterType="com.jhta.moviefan.vo.CommentLikedCustomer">
		delete from COMMENT_LIKED_USER
		where COMMENT_NO = #{commentNo}
		and CUSTOMER_NO = #{customerNo}
	</delete>
	
</mapper>