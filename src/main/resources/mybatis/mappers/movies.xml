<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jhta.moviefan.dao.MovieDao">

	<resultMap id="MovieResultMap" type="com.jhta.moviefan.vo.Movie">
		<id column="MOVIE_NO"					property="no"/>
		<result column="MOVIE_TITLE" 			property="title"/>
		<result column="MOVIE_TITLE_EN" 		property="titleEn"/>
		<result column="MOVIE_RATE" 			property="rate"/>
		<result column="MOVIE_RUNTIME" 			property="runtime"/>
		<result column="MOVIE_OPEN_DATE" 		property="openDate"/>
		<result column="MOVIE_PRODUCTION_YEAR" 	property="productionYear"/>
		<result column="MOVIE_CUSTOMER_RATING" 	property="customerRating"/>
		<result column="MOVIE_TOTAL_AUDIENCE" 	property="totalAudience"/>
		<result column="MOVIE_SUMMARY" 			property="summary"/>
		<result column="MOVIE_PRODUCER" 		property="producer"/>
		<result column="MOVIE_POSTER" 			property="poster"/>
		<result column="MOVIE_CREATED_DATE"		property="createdDate"/>
		<result column="MOVIE_UPDATED_DATE"		property="updatedDate"/>	
	</resultMap>
	
	<select id="getMoviesTotalRows" resultType="int">
		select 
			count(*)
		from
			movie
	</select>
	
	<select id="getAllMovies" resultMap="MovieResultMap">
		select
			*
		from 
			movie
		order by
			movie_created_date desc
	</select>
	
	<select id="getMovies" resultMap="MovieResultMap">
		select
			*
		from (
			select A.*, row_number() over (order by movie_created_date desc) rn
			from movie A
		)
		where 
			rn between #{beginIndex} and #{endIndex}
	</select>
	
	<select id="getMoviesNowPlaying" parameterType="map" resultMap="MovieResultMap">
		select 
			distinct m.*
		from 
			movie m, show s, cinema_hall ch
		where 
			s.show_start_time > current_date
		and 
			s.movie_no = m.movie_no
		<if test="cinemaNo != null">
			and s.hall_no = ch.hall_no
			and ch.cinema_no = #{cinemaNo}
		</if>
		<if test="showDate != null">
			and s.show_date = #{showDate}
		</if>
		order by
			m.movie_open_date desc
	</select>
	
	<select id="getMovieByMovieNo" parameterType="int" resultMap="MovieResultMap">
		select *
		from movie
		where movie_no = #{value}
	</select>
	
	<!-- 홈에 뿌려줄 것 -->
	<select id="getHomeMovieDetail" resultType="com.jhta.moviefan.dto.HomeTrailerDetailDto">
		select  
				m.MOVIE_NO						as no,
				m.MOVIE_TITLE					as title, 
				m.MOVIE_SUMMARY					as summary, 
				m.MOVIE_TITLE_EN				as titleEn, 
				t.MOVIE_TRAILER_URL_ADDRESS		as urlAddress, 
				m.MOVIE_OPEN_DATE				as openDate
		from MOVIE m, MOVIE_TRAILER t
		where m.movie_no = t.movie_no
		and t.IS_HOMETRAILER = 'Y'
	</select>
	
	<!-- 모달에 뿌려줄 것 -->
	<select id="getHomeTrailer" resultType="com.jhta.moviefan.dto.HomeTrailerDto">
		select  m.MOVIE_TITLE					as title, 
				m.MOVIE_SUMMARY					as summary, 
				m.MOVIE_TITLE_EN				as titleEn, 
				t.MOVIE_TRAILER_URL_ADDRESS		as urlAddress, 
				m.MOVIE_OPEN_DATE				as openDate
		from MOVIE m, MOVIE_TRAILER t
		where m.movie_no = t.movie_no
	</select>
	
	<select id="getMovieImagesByMovieNo" parameterType="int" resultType="com.jhta.moviefan.vo.MovieImage">
		select 	
			movie_no			 as movieNo, 
			movie_image_filename as fileName
		from 
			movie_image
		where
			movie_no = #{value}
	</select>
	
	<select id="getMovieTrailersByMovieNo" parameterType="int" resultType="com.jhta.moviefan.vo.MovieTrailer">
		select 	
			movie_no					as movieNo, 
			movie_trailer_title			as title, 
			movie_trailer_url_address	as urlAddress, 
			movie_trailer_created_date	as createdDate
		from 
			movie_trailer
		where 
			movie_no = #{value}
	</select>

	<select id="getMovieGenresByMovieNo" parameterType="int" resultType="com.jhta.moviefan.vo.MovieGenre">
		select 
			mg.movie_no		as movieNo,
			g.genre_no		as genreNo,
			g.genre_name	as genreName
		from 
			movie_genre mg, 
			genre g
		where 
			mg.movie_no = #{value}
		and 
			mg.genre_no = g.genre_no
	</select>
	
	<select id="getGenreByName" parameterType="string" resultType="com.jhta.moviefan.vo.Genre">
		select 
			genre_no		as no, 
			genre_name		as name
		from 
			genre
		where 
			genre_name = #{value}
	</select>
	
	<select id="getMovieDirectorsByMovieNo" parameterType="int" resultType="com.jhta.moviefan.vo.MovieDirector">
		select
			md.movie_no			as movieNo,
			d.director_no		as directorNo,
			d.director_name		as directorName,
			d.director_name_en	as directorNameEn
		from
			movie_director md,
			director d
		where
			md.movie_no = #{value}
		and
			md.director_no = d.director_no
	</select>
	
	<select id="getDirectorByNo" parameterType="int" resultType="com.jhta.moviefan.vo.Director">
		select 
			director_no			as no,
			director_name		as name,
			director_name_en	as nameEn
		from 
			director
		where 
			director_no = #{value}			
	</select>
	
	<select id="getActorByNo" parameterType="int" resultType="com.jhta.moviefan.vo.Actor">
		select 
			actor_no		as no,
			actor_name		as name,
			actor_name_en	as nameEn
		from 
			actor
		where 
			actor_no = #{value}			
	</select>
	
	<select id="getMovieActorsByMovieNo" parameterType="int" resultType="com.jhta.moviefan.vo.MovieActor">
		select
			ma.movie_no			as movieNo,
			ma.actor_priority	as actorPriority,
			a.actor_no			as actorNo,
			a.actor_name		as actorName,
			a.actor_name_en		as actorNameEn
		from
			movie_actor ma,
			actor a
		where
			ma.movie_no = #{value}
		and
			ma.actor_no = a.actor_no
	</select>
	
	<select id="getMovieOrderByRating" resultMap="MovieResultMap">
		select x.*
		from (select m.*
		      from movie m
		      order by MOVIE_CUSTOMER_RATING desc) x
		where rownum &lt;= 10
	</select>
	
	<select id="getMovieByDate" resultMap="MovieResultMap">
		select *
		from movie
		where movie_open_date > #{value}
		order by movie_open_date asc
	</select>
	
	<insert id="insertMovie" parameterType="com.jhta.moviefan.vo.Movie">
		insert into movie
		(movie_no, movie_title, movie_title_en, movie_rate, movie_runtime, movie_open_date, movie_production_year, movie_summary, movie_producer, movie_created_date)
		values
		(#{no}, #{title}, #{titleEn}, #{rate}, #{runtime}, #{openDate}, #{productionYear}, #{summary}, #{producer}, sysdate)
	</insert>
	
	<insert id="insertActor" parameterType="com.jhta.moviefan.vo.Actor">
		insert into actor
		(actor_no, actor_name, actor_name_en)
		values
		(#{no}, #{name}, #{nameEn})
	</insert>
	
	<insert id="insertMovieActor" parameterType="com.jhta.moviefan.vo.MovieActor">
		insert into movie_actor
		(movie_no, actor_no, actor_priority)
		values
		(#{movieNo}, #{actorNo}, #{actorPriority})
	</insert>
	
	<insert id="insertDirector" parameterType="com.jhta.moviefan.vo.Director">
		insert into director
		(director_no, director_name, director_name_en)
		values
		(#{no}, #{name}, #{nameEn})
	</insert>
	
	<insert id="insertMovieDirector" parameterType="com.jhta.moviefan.vo.MovieDirector">
		insert into movie_director
		(movie_no, director_no)
		values
		(#{movieNo}, #{directorNo})
	</insert>
	
	<insert id="insertMovieGenre" parameterType="com.jhta.moviefan.vo.MovieGenre">
		insert into movie_genre 
		(movie_no, genre_no)
		values 
		(#{movieNo}, #{genreNo})
	</insert>
	
	<insert id="insertMovieImage" parameterType="com.jhta.moviefan.vo.MovieImage">
		insert into movie_image
		(movie_no, movie_image_filename)
		values
		(#{movieNo}, #{filename})
	</insert>
	
	<insert id="insertMovieTrailer" parameterType="com.jhta.moviefan.vo.MovieTrailer">
		insert into movie_trailer
		(movie_no, movie_trailer_title, movie_trailer_url_address)
		values
		(#{movieNo}, #{title}, #{urlAddress})
	</insert>
	
	<update id="updateMovie" parameterType="com.jhta.moviefan.vo.Movie">
		update movie
		set
			movie_summary = #{summary},
			movie_updated_date = sysdate
		where
			movie_no = #{no}
	</update>
	
	<delete id="deleteMovieImage" parameterType="string">
		delete from movie_image
		where movie_image_filename = #{value}
	</delete>
	
	<delete id="deleteMovieTrailer" parameterType="int">
		delete from movie_trailer
		where movie_no = #{value}
	</delete>
	
	<update id="updateHomeTrailerToN">
		update MOVIE_TRAILER
		set
			IS_HOMETRAILER = 'N'
		where
			IS_HOMETRAILER = 'Y'
	</update>
	
	<update id="updateHomeTrailer" parameterType="string">
		update MOVIE_TRAILER
		set
			IS_HOMETRAILER = 'Y'
		where
			MOVIE_TRAILER_URL_ADDRESS = #{value}
	</update>
</mapper>